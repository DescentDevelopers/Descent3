name: Descent 3 Build

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/README.md'
      - '**/LICENSE'
      - '**/.github/ISSUE_TEMPLATE/*'
      - '**/.github/pull_request/template.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**/README.md'
      - '**/LICENSE'
      - '**/.github/**'

jobs:
  build:
    name: ${{ matrix.os.runner }}, ${{ matrix.os.cxx }}, ${{ matrix.build_type }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - runner: windows-latest
            preset: win
            cc: cl
            cxx: cl
            name: Windows-x86
          - runner: macos-12 # This is supposed to be Intel for now, and what macos-latest is defaulting to for some reason (as of 04/2024)
            preset: mac
            cc: cc
            cxx: c++
            name: macOS-Intel
          - runner: macos-14 # This is supposed to be M1
            preset: mac
            cc: cc
            cxx: c++
            name: macOS-ARM
          - runner: ubuntu-latest
            preset: linux
            cc: gcc
            cxx: g++
            name: Linux-x64
          - runner: ubuntu-latest
            preset: linux
            cc: clang
            cxx: clang++
            name: Linux-x64-clang
        build_type:
          - Debug
          - Release

    runs-on: ${{ matrix.os.runner }}

    steps:
      - uses: actions/checkout@v4

      - name: Cache dependencies
        if: ${{ matrix.os.preset != 'linux' }}
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/Homebrew/
            /usr/local/bin/
            /usr/local/Cellar/
            /usr/local/opt/
            ~/.cache/
            ~/.ccache/
            ~/.conan/
            ~/.npm/
            ~/.yarn/
            ~/.cargo/
            ~/Library/Caches/Homebrew/
            /vcpkg/downloads/
            /vcpkg/installed/
          key: ${{ runner.os }}-deps-${{ hashFiles('**/lockfiles') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Install macOS dependencies
        if: ${{ matrix.os.preset == 'mac' }}
        run: |
          # Install packages from Homebrew
          brew bundle install

      # `autopoint`, `gperf` tools needed for another package, probably wayland dependencies
      - name: Install Linux dependencies
        if: ${{ matrix.os.preset == 'linux' }}
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends \
            ninja-build cmake g++ libgtest-dev libsdl1.2-dev libsdl-image1.2-dev libncurses-dev zlib1g-dev libspdlog-dev \
            libx11-dev libxft-dev libxext-dev \
            libwayland-dev libxkbcommon-dev libegl1-mesa-dev \
            libibus-1.0-dev \
            autopoint gperf

      - uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: "501cb01e517ee5689577bb01ba8bd1b4c1041a53"

      - name: Configure and build
        uses: lukka/run-cmake@v10
        env:
          CC: ${{ matrix.os.cc }}
          CXX: ${{ matrix.os.cxx }}
        with:
          configurePreset: ${{matrix.os.preset}}
          configurePresetAdditionalArgs: "['-DBUILD_TESTING=ON', '-DENABLE_LOGGER=ON']"
          buildPreset: ${{matrix.os.preset}}
          buildPresetAdditionalArgs: "['--config ${{matrix.build_type}}', '--verbose', '-Wno-unused-value', '-Wno-int-to-pointer-cast']"

      - name: Run ${{ matrix.build_type }} Unittests
        run: ctest --preset ${{ matrix.os.preset }} -C ${{ matrix.build_type }}

      - name: Packaging
        # TO-DO: Replace with full packaging steps
        run: cp LICENSE ${{ github.workspace }}/builds/${{ matrix.os.preset }}/Descent3/${{ matrix.build_type }}/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Descent3_${{ matrix.build_type }}_${{ matrix.os.name }}
          path: ${{ github.workspace }}/builds/${{ matrix.os.preset }}/Descent3/${{ matrix.build_type }}/
